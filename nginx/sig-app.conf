server {
    # listen 443 ssl http2;
    server_name hello-docker-nginx;
    listen 80;

    # SSL configuration
    # ssl_certificate /etc/ssl/localhost.crt;
    # ssl_certificate_key /etc/ssl/private/localhost.key;
    # ssl_session_cache shared:SSL:1m;
    # ssl_session_timeout 10m;
    # ssl_ciphers HIGH:!aNULL:!MD5;
    # keepalive_timeout 70;   

    # Max upload size
    # client_max_body_size 500M;

    # CORS headers
    # add_header 'Access-Control-Allow-Origin' '*';
    # add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
    # add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
    # add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';

    # Blue/green routing - default to blue (port 8081)
    location / {
        proxy_pass http://127.0.0.1:8081;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $host;
        
        # Health check endpoint for zero-downtime deployments
        proxy_intercept_errors on;
        error_page 500 502 503 504 = @maintenance;
    }

    # Maintenance page for unhealthy backends
    location @maintenance {
        # Try green deployment if blue is down
        proxy_pass http://127.0.0.1:8082;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $host;
    }

    # Health check endpoint (for deployment scripts)
    location /health {
        # Check both blue and green
        proxy_pass http://127.0.0.1:8081/health;
        proxy_intercept_errors on;
        error_page 500 502 503 504 = @health_green;
    }

    location @health_green {
        proxy_pass http://127.0.0.1:8082/health;
    }
}