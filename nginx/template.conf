server {
    listen 80;
    server_name ${SERVER_NAME};
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    server_name ${SERVER_NAME};

    ssl_certificate ${SSL_CERT_FILE};
    ssl_certificate_key ${SSL_KEY_FILE};
    ssl_session_cache shared:SSL:1m;
    ssl_session_timeout 10m;

    ssl_ciphers HIGH:!aNULL:!MD5;
    keepalive_timeout 70;

    client_max_body_size 500M;

    # CORS headers
    add_header 'Access-Control-Allow-Origin' '*';
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
    add_header 'Access-Control-Allow-Headers' 'DNT, User-Agent, X-Requested-With, If-Modified-Since, Cache-Control, Content-Type, Range';
    add_header 'Access-Control-Expose-Headers' 'Content-Length, Content-Range'

    location / {
        proxy_pass http://public:8081;
	proxy_set_header Host $host;
	proxy_set_header X-Real-IP $remote-addr;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header X-Forwarded-Proto $scheme;

	proxy_intercept_errors on;
	error_page 500 502 503 504 = @maintenance;
    }

    location @candidate_fallback {
        proxy_pass http://candidate:8082;
	proxy_set_header Host $host;
	proxy_set_header X-Real-IP $remote-addr;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header X-Forwarded-Proto $scheme;        
    }
}